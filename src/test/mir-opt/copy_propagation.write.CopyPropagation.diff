- // MIR for `write` before CopyPropagation
+ // MIR for `write` after CopyPropagation
  
  fn write(_1: &mut T, _2: T) -> () {
      debug dst => _1;                     // in scope 0 at $DIR/copy_propagation.rs:4:23: 4:26
      debug value => _2;                   // in scope 0 at $DIR/copy_propagation.rs:4:36: 4:41
      let mut _0: ();                      // return place in scope 0 at $DIR/copy_propagation.rs:4:46: 4:46
      let mut _3: T;                       // in scope 0 at $DIR/copy_propagation.rs:5:12: 5:17
  
      bb0: {
          StorageLive(_3);                 // scope 0 at $DIR/copy_propagation.rs:5:12: 5:17
          _3 = _2;                         // scope 0 at $DIR/copy_propagation.rs:5:12: 5:17
-         (*_1) = move _3;                 // scope 0 at $DIR/copy_propagation.rs:5:5: 5:17
+         (*_1) = _2;                      // scope 0 at $DIR/copy_propagation.rs:5:5: 5:17
          StorageDead(_3);                 // scope 0 at $DIR/copy_propagation.rs:5:16: 5:17
          return;                          // scope 0 at $DIR/copy_propagation.rs:6:2: 6:2
      }
  }
  
