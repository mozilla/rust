// MIR for `process_void` after SimplifyLocals

fn process_void(_1: *const Void) -> () {
    debug input => _1;                   // in scope 0 at $DIR/uninhabited-enum.rs:11:21: 11:26
    let mut _0: ();                      // return place in scope 0 at $DIR/uninhabited-enum.rs:11:41: 11:41
    let _2: &Void;                       // in scope 0 at $DIR/uninhabited-enum.rs:12:8: 12:14
    scope 1 {
        debug _input => _2;              // in scope 1 at $DIR/uninhabited-enum.rs:12:8: 12:14
    }
    scope 2 {
    }

    bb0: {
        StorageLive(_2);                 // scope 0 at $DIR/uninhabited-enum.rs:12:8: 12:14
        _2 = &(*_1);                     // scope 2 at $DIR/uninhabited-enum.rs:12:26: 12:33
        StorageDead(_2);                 // scope 0 at $DIR/uninhabited-enum.rs:15:1: 15:2
        return;                          // scope 0 at $DIR/uninhabited-enum.rs:15:2: 15:2
    }
}
