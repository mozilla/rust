- // MIR for `main` before ConstProp
+ // MIR for `main` after ConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/aggregate.rs:4:11: 4:11
      let _1: i32;                         // in scope 0 at $DIR/aggregate.rs:5:9: 5:10
      let mut _2: i32;                     // in scope 0 at $DIR/aggregate.rs:5:13: 5:24
      let mut _3: (i32, i32, i32);         // in scope 0 at $DIR/aggregate.rs:5:13: 5:22
      let mut _4: i32;                     // in scope 0 at $DIR/aggregate.rs:5:13: 5:22
      let mut _5: i32;                     // in scope 0 at $DIR/aggregate.rs:5:13: 5:22
      let mut _6: i32;                     // in scope 0 at $DIR/aggregate.rs:5:13: 5:22
      scope 1 {
          debug x => _1;                   // in scope 1 at $DIR/aggregate.rs:5:9: 5:10
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/aggregate.rs:5:9: 5:10
          StorageLive(_2);                 // scope 0 at $DIR/aggregate.rs:5:13: 5:24
          nop;                             // scope 0 at $DIR/aggregate.rs:5:13: 5:22
          _4 = const 0_i32;                // scope 0 at $DIR/aggregate.rs:5:13: 5:22
          _5 = const 1_i32;                // scope 0 at $DIR/aggregate.rs:5:13: 5:22
          _6 = const 2_i32;                // scope 0 at $DIR/aggregate.rs:5:13: 5:22
-         _2 = _5;                         // scope 0 at $DIR/aggregate.rs:5:13: 5:24
-         _1 = Add(move _2, const 0_i32);  // scope 0 at $DIR/aggregate.rs:5:13: 5:28
+         _2 = const 1_i32;                // scope 0 at $DIR/aggregate.rs:5:13: 5:24
+         _1 = const 1_i32;                // scope 0 at $DIR/aggregate.rs:5:13: 5:28
          StorageDead(_2);                 // scope 0 at $DIR/aggregate.rs:5:27: 5:28
          nop;                             // scope 0 at $DIR/aggregate.rs:5:28: 5:29
          nop;                             // scope 0 at $DIR/aggregate.rs:4:11: 6:2
          StorageDead(_1);                 // scope 0 at $DIR/aggregate.rs:6:1: 6:2
          return;                          // scope 0 at $DIR/aggregate.rs:6:2: 6:2
      }
  }
  
