warning: irrefutable `while let` pattern
  --> $DIR/while-let.rs:7:19
   |
LL |               while let $p = $e $b
   |                     ^^^ this pattern will always match, so the loop will never exit
...
LL | /     foo!(_a, 1, {
LL | |         println!("irrefutable pattern");
LL | |     });
   | |_______- in this macro invocation
   |
   = note: `#[warn(irrefutable_let_patterns)]` on by default
   = help: consider instead using a `loop { ... }` with a `let` inside it
   = help: for more information, visit <https://doc.rust-lang.org/book/ch18-02-refutability.html>
   = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)

warning: irrefutable `while let` pattern
  --> $DIR/while-let.rs:7:19
   |
LL |               while let $p = $e $b
   |                     ^^^ this pattern will always match, so the loop will never exit
...
LL | /     bar!(_a, 1, {
LL | |         println!("irrefutable pattern");
LL | |     });
   | |_______- in this macro invocation
   |
   = help: consider instead using a `loop { ... }` with a `let` inside it
   = help: for more information, visit <https://doc.rust-lang.org/book/ch18-02-refutability.html>
   = note: this warning originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)

warning: irrefutable `while let` pattern
  --> $DIR/while-let.rs:27:11
   |
LL |     while let _a = 1 {
   |           ^^^^^^^^^^ this pattern will always match, so the loop will never exit
   |
   = help: consider instead using a `loop { ... }` with a `let` inside it
   = help: for more information, visit <https://doc.rust-lang.org/book/ch18-02-refutability.html>

warning: 3 warnings emitted

